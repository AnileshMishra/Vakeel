package com.vakeel.master.service;

import java.sql.Timestamp;
import java.util.Date;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.vakeel.master.dto.RequestDto;
import com.vakeel.master.dto.ResponseDto;
import com.vakeel.master.modal.DistrictMaster;
import com.vakeel.master.repository.JpaDistrictMasterRepository;
import com.vakeel.master.serviceImpl.DistrictMasterServiceImpl;

@Service
public class DistrictMasterService implements DistrictMasterServiceImpl {

	@Autowired
	private JpaDistrictMasterRepository jpaDistrictMasterRepository;

	@Override
	public ResponseDto getDistrictlist() {
		ResponseDto responseDto = new ResponseDto();

		List<DistrictMaster> districtList = jpaDistrictMasterRepository.findAllByIsDeleted(false);

		if (districtList != null && !districtList.isEmpty()) {
			responseDto.setStatusCode(200);
			responseDto.setStatusMsg("Success.");
			responseDto.setResponseMsg("Record found successfully!!!.");
			responseDto.setDistrictMasterList(districtList);
		} else {
			responseDto.setStatusCode(401);
			responseDto.setStatusMsg("failed.");
			responseDto.setResponseMsg("Record not found.");
		}
		return responseDto;
	}

	@Override
	public ResponseDto getDistrictByStateMaster(RequestDto requestDto) {
		ResponseDto responseDto = new ResponseDto();

		List<DistrictMaster> districtMaster = jpaDistrictMasterRepository
				.findByStateCodeAndIsDeleted(requestDto.getStateCode(), false);

		if (districtMaster != null && !districtMaster.isEmpty()) {
			responseDto.setStatusCode(200);
			responseDto.setStatusMsg("Success.");
			responseDto.setResponseMsg("Record found successfully!!!.");
			responseDto.setDistrictMasterList(districtMaster);
		} else {
			responseDto.setStatusCode(401);
			responseDto.setStatusMsg("failed.");
			responseDto.setResponseMsg("Record not found.");
		}
		return responseDto;
	}
	
	@Override
	public ResponseDto getStateMasterById(RequestDto requestDto) {
		ResponseDto responseDto = new ResponseDto();

		List<DistrictMaster> districtMaster = jpaDistrictMasterRepository
				.findByStateCodeAndIsDeleted(requestDto.getStateCode(), false);

		if (districtMaster != null && !districtMaster.isEmpty()) {
			responseDto.setStatusCode(200);
			responseDto.setStatusMsg("Success.");
			responseDto.setResponseMsg("Record found successfully!!!.");
			responseDto.setDistrictMasterList(districtMaster);
		} else {
			responseDto.setStatusCode(401);
			responseDto.setStatusMsg("failed.");
			responseDto.setResponseMsg("Record not found.");
		}
		return responseDto;
	}

	@Override
	public ResponseDto createDistrictInDistrictMaster(DistrictMaster districtMaster) {
		ResponseDto responseDto = new ResponseDto();

		districtMaster.setCreatedDate(new Timestamp(new Date().getTime()));
		DistrictMaster savedDistrictMaster = jpaDistrictMasterRepository.save(districtMaster);

		if (savedDistrictMaster.getId() != null) {
			responseDto.setStatusCode(200);
			responseDto.setStatusMsg("Success.");
			responseDto.setResponseMsg("Record created successfully!!!.");
			responseDto.setDistrictMaster(savedDistrictMaster);
		} else {
			responseDto.setStatusCode(401);
			responseDto.setStatusMsg("failed.");
			responseDto.setResponseMsg("Record failed to create.");
		}
		return responseDto;
	}

	@Override
	public ResponseDto deleteDistrictInDistrictMaster(RequestDto requestDto) {
		ResponseDto responseDto = new ResponseDto();

		Optional<DistrictMaster> districtMaster = jpaDistrictMasterRepository.findById(requestDto.getDistrictId());

		DistrictMaster newDistrictMaster = null;
		if (districtMaster.isPresent()) {
			newDistrictMaster = new DistrictMaster();
			newDistrictMaster = districtMaster.get();
			newDistrictMaster.setDeleted(true);
			newDistrictMaster.setDeletedDate(new Timestamp(new Date().getTime()));

			newDistrictMaster = jpaDistrictMasterRepository.save(newDistrictMaster);
		} else {
			responseDto.setStatusCode(401);
			responseDto.setStatusMsg("failed.");
			responseDto.setResponseMsg("No Record exist.");
			return responseDto;
		}
		if (newDistrictMaster.isDeleted()) {
			responseDto.setStatusCode(200);
			responseDto.setStatusMsg("Success.");
			responseDto.setResponseMsg("Record deleted successfully!!!.");
			responseDto.setDistrictMaster(newDistrictMaster);
		} else {
			responseDto.setStatusCode(401);
			responseDto.setStatusMsg("failed.");
			responseDto.setResponseMsg("Record failed to delete.");
		}
		return responseDto;
	}

	public int testMethod(int[] data) {
		int sum = 0;
		for(int value:data) {
			sum+= value;
		}
		return sum;
	}
}
